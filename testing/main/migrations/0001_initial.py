# Generated by Django 4.1.7 on 2023-06-05 09:36

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BLOCK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NAME', models.CharField(max_length=50, verbose_name='НАЗВАНИЕ БЛОКА ')),
            ],
        ),
        migrations.CreateModel(
            name='GUIDE_MODEL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NAME', models.CharField(max_length=100, verbose_name='ИМЯ СПРАВОЧНИКА')),
                ('TEXT', models.TextField(max_length=5000, verbose_name='Информация: ')),
                ('LINK', models.CharField(blank=True, max_length=250, verbose_name='Идентефикатор на ютуб https://www.youtube.com/embed/')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('photo', models.ImageField(blank=True, upload_to='guide_photos/')),
            ],
        ),
        migrations.CreateModel(
            name='REZ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('full_name', models.CharField(max_length=100)),
                ('test_name', models.CharField(max_length=100)),
                ('score', models.FloatField(default=0)),
                ('date', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=100)),
                ('test_name', models.CharField(max_length=100)),
                ('score', models.FloatField()),
                ('ball', models.FloatField()),
                ('hp', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TZ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название задания')),
                ('text', models.TextField(max_length=5000, verbose_name='Задание ')),
                ('photo', models.ImageField(blank=True, upload_to='TZ/picture/', verbose_name='Добавить фото')),
                ('document', models.FileField(blank=True, upload_to='TZ/document/', verbose_name='Добавить документ')),
            ],
        ),
        migrations.CreateModel(
            name='TZ_ANSWER',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_tz', models.IntegerField(verbose_name='ID задания')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО')),
                ('text', models.TextField(max_length=5000, verbose_name='КОМЕНТАРИИ К ЗАДАНИЮ ')),
                ('document', models.FileField(blank=True, upload_to='TZ/document/', verbose_name='Добавить документ')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('FLAG', models.IntegerField(default=3, verbose_name='ЗАЧЁТ/НЕЗАЧЁТ')),
            ],
        ),
        migrations.CreateModel(
            name='User_Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('score', models.FloatField(default=0)),
                ('full_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VOPROS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IND', models.IntegerField(verbose_name='ID ТЕСТА')),
                ('QUESTION', models.CharField(max_length=150, verbose_name='ВОПРОС ')),
                ('OTVETS', models.TextField(blank=True, verbose_name='Варианты ответа через')),
                ('TRUE_OTVET', models.CharField(max_length=100, verbose_name='Правильные ответы через')),
            ],
        ),
        migrations.CreateModel(
            name='VOPROS_NAME',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BLOCK', models.IntegerField(verbose_name='ID BLOCK')),
                ('NAME', models.CharField(max_length=50, verbose_name='НАЗВАНИЕ ТЕСТА ')),
                ('LENGHT_VOPROS', models.PositiveIntegerField(verbose_name='Количество вопросов')),
                ('BALL', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Количество баллов ')),
                ('HP', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество попыток ')),
            ],
        ),
    ]
